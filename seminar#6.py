# Задача №39.

# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод:                          Вывод:
# 7                             3 3 2 12
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)


# import random
# def fill_list(element):
#     new_list = []
#     for i in range(element):
#         new_list.append(random.randint(1, 20))
#     return new_list


# first_set = int(input("Введите количество элементов в 1 наборе: "))
# n = fill_list(first_set)
# print(n)
# print()
# second_set = int(input("Введите количество элементов во 2 наборе: "))
# m = fill_list(second_set)
# print(m)

# print()
# print(f"Новый набор по возрастанию: {sorted(set(n + m))}")


##########################

# Задача №41.

# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод:          Ввод:
# 5              5
# 1 2 3 4 5      1 5 1 5 1
# Вывод:         Вывод:
# 0              2





############################


# Задача №43.

# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод:             Вывод:
# 1 2 3 2 3         2


# from random import randint

# numbers = [randint(1, 5) for i in range(int(input("Введите кол-во элементов списка: ")))]
# print(numbers)

# numbers_unique = set(numbers)
# numbers_unique = list(numbers_unique)

# pairs = 0

# for elem in numbers_unique:
#     pairs += numbers.count(elem) // 2

# print(pairs)

#####################

# Задача №45.

# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).

# Ввод:         Вывод:
# 300           220 284


# A = 1000
# couple = 0
# n = 0
# m = 0
# for i in A
#     if n and m = n// == m and n = m//;


nums = []

def findSum(num):
    sum = 0
    for i in range(1, num // 2 + 1):
        if num % i == 0:
            sum += i
    return(sum)

for i in range(1, 10000):
    sum1 = findSum(i)
    sum2 = findSum(sum1)
    if sum2 == i and sum1 != sum2 and sum1 not in nums:
        nums.append(i)
        nums.append(sum1)
        print(i, sum1)

############

# Решение через словарь














